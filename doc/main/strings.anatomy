#title:{Strings}tag:"strings"

Strings are immutable, efficient, Unicode sequences of characters.

#define:{
    c singleton
    | c is-a?: Char
    > String
}body:{
    Creates a #hl:{String} containing a single character.

    #example:{
        $a singleton
    }
}

#define:{
    s as: List
    | s is-a?: String
    > List
}body:{
    Convert string #hl:{s} to a #hl:{List} of #hl:{Char}s.

    #example:{
        "foo" as: List
    }
}

#define:{
  l to: String
  | l is-a?: List
  > String
}body:{
  Attempts to convert a list to a string. If the list does not contain only #hl:{Char}s, #hl:{@list-not-homogenous} is signaled.

  #example:{
    [$a, $b, $c] to: String
    [$a, 1, $c] to: String
  }
}

#define:{
    s length
    | s is-a?: String
    > Integer
}body:{
    Yields the length of the string.

    #example:{
        "abc" length
        "Hello, 世界!" print length
    }
}

#define:{
    s empty?
    | s is-a?: String
    > Boolean
}body:{
    Is the string #hl:{s} empty?

    #example:{
        "" empty?
        "no" empty?
    }
}

#define:{
    s at: index
    | s is-a?: String
    | index is-a?: Integer
    > Char
}body:{
    Returns the string's character at #hl:{index}. If the index is out of bounds, #hl:{@(out-of-bounds: index for-string: s)} is raised.

    #example:{
        "abc" at: 1
        "abc" at: 3
    }
}

#define:{
    s head
    | s is-a?: String
    > any
}body:{
    Returns the first character of the string. If the string is empty, #hl:{@empty-string} is raised.

    #example:{
        "abc" head
    }
}

#define:{
    s last
    | s is-a?: String
    > any
}body:{
    Returns the last character of the string. If the string is empty, #hl:{@empty-string} is raised.

    #example:{
        "abc" last
    }
}

#define:{
    s init
    | s is-a?: String
    > String
}body:{
    Returns all but the last character of the string. If the string is empty, #hl:{@empty-string} is raised.

    #example:{
        "abc" init
    }
}

#define:{
    s tail
    | s is-a?: String
    > String
}body:{
    Returns all but the first character of the string. If the string is empty, #hl:{@empty-string} is raised.

    #example:{
        "abc" tail
    }
}


