main = self

start: token :=
  { "starting!" print

    h = (503 down-to: 2) reduce:
      { pid id |
        { roundtrip: id next: pid } spawn
      } with: self

    h <- token

    roundtrip: 1 next: h
  } call

roundtrip: id next: pid :=
  { done? = False
    { receive match: {
        @done ->
          done? set!: True

        1 ->
          { id print
            main <- @done
          } call

        token ->
          (pid <- (token - 1))
      }
    } until: { done? }
  } call

{ start: 500000 } time print